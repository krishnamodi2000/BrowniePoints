variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  #IMAGE_NAME: docker.io/sardock01/cicdregistry
  #IMAGE_TAG: CICD-BPA
  #DOCKER_HOST: tcp://localhost:2375/
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:latest

default:
  image: maven:3.8.3-openjdk-17
  tags: 
  - docker
  services: 
  - docker:18.09.7-dind

stages:
  - build
  - test
  - package
  - build_image
  - deploy

# build:
#   stage: build
#   image: maven:3.8.3-openjdk-17
#   script:
#     - mvn -f backend/pom.xml install

#test:
#  stage: test
#  image: maven:3.8.3-openjdk-17
 # script:
#    - mvn -f backend/pom.xml test

# package:
#   stage: package
#   script: 
#      - echo "Maven Packaging Started"
#      - mvn -f backend/pom.xml clean package
#   artifacts:
#     paths:
#       - backend/target/*.jar
#   only:
#     - PX-22_CD_Implementation


# build_image:
#   stage: build_image
#   image: docker:20.10.16
#   services:
#     - docker:20.10.16-dind
#   variables:
#     DOCKER_TLS_CERTDIR: "/certs"
#   before_script:
#     - pwd
#     - docker build -t $CONTAINER_IMAGE .
#     - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
#     - docker push $CONTAINER_IMAGE
#   script:
#     - echo "Docker Image Build"

deploy:
  stage: deploy
  before_script:
    - echo "$DEPLOY_SSH_KEY" | base64 -d > key
    - chmod 600 key
    - eval $(ssh-agent -s)
    - ssh-add key
  script: 
    - echo "Maven Deploy Started"
    #- echo "${DEPLOY_SSH_KEY}"
    #- eval $(ssh-agent -s)
    #- ssh-add <(echo "${DEPLOY_SSH_KEY}" | base64 -d)
    - scp -r -o StrictHostKeyChecking=no backend/target/*.jar "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/project.jar"
  

