variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  DOCKER_HOST: tcp://localhost:2375/
  CI_REGISTRY_IMAGE: latest

default:
  image: maven:3.8.3-openjdk-17
  tags: 
  - docker
  services: 
  - docker:18.09.7-dind

stages:
  - build
  - test
  - package
  - docker
  - deploy

#build:
#  stage: build
#  image: maven:3.8.3-openjdk-17
#  script:
#    - mvn -f backend/pom.xml install

#test:
#  stage: test
#  image: maven:3.8.3-openjdk-17
 # script:
#    - mvn -f backend/pom.xml test

# package:
#   stage: package
#   script: 
#     - echo "Maven Packaging Started"
#     - mvn -f backend/pom.xml clean package
#   artifacts:
#     paths:
#       - backend/target/*.jar
#   only:
#     - PX-22_CD_Implementation


# deploy:
#   stage: deploy
#   image: docker:latest
#   before_script:
#     - echo "SSH_PRIVATE_KEY:" ${SSH_PRIVATE_KEY}
#     - echo "CI_REGISTRY:" $CI_REGISTRY
#     - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} $CI_REGISTRY
#     - docker build -t ${CONTAINER_TEST_IMAGE}
#     - docker push ${CONTAINER_TEST_IMAGE}
#     - docker logout
#   script:
#     - echo "Maven Deployment Started"

build_job_docker:
  stage: docker
  script:
    - echo "${DEPLOY_SSH_KEY}"
    - docker login -u ${CI_REGISTRY_USERNAME} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
    - docker logout


deploy:
  stage: deploy
  script:
    - echo "Maven deploy started"
    - echo "${DEPLOY_SSH_KEY}"
    - eval $(ssh-agent -s)
    - ssh-add <(echo "${DEPLOY_SSH_KEY}" | base64 -d)
    - ssh-add -l
    - scp -r -o StrictHostKeyChecking=no target/*.jar "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/project.jar"
    - ssh -o StrictHostKeyChecking=no  csci5308vm3@csci5308vm3.research.cs.dal.ca /home/csci5308vm3/project/stop_container.sh
    - ssh -o StrictHostKeyChecking=no  csci5308vm3@csci5308vm3.research.cs.dal.ca docker pull $CONTAINER_TEST_IMAGE
    - ssh -o StrictHostKeyChecking=no  csci5308vm3@csci5308vm3.research.cs.dal.ca docker run -d -p $EXPOSED_PORT:8080 --name project_app --rm $CONTAINER_TEST_IMAGE_VERSION
